"""add tz to time columns in issues

Revision ID: 62de9eff4009
Revises: f92febcaecbd
Create Date: 2024-03-13 13:37:16.696143

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '62de9eff4009'
down_revision: Union[str, None] = 'f92febcaecbd'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('issues', 'finish_date_plane',
               existing_type=postgresql.TIMESTAMP(),
               type_=sa.DateTime(timezone=True),
               existing_nullable=False)
    op.alter_column('issues', 'dead_line',
               existing_type=postgresql.TIMESTAMP(),
               type_=sa.DateTime(timezone=True),
               existing_nullable=False)
    op.alter_column('issues', 'finished_at',
               existing_type=postgresql.TIMESTAMP(),
               type_=sa.DateTime(timezone=True),
               existing_nullable=True)
    op.drop_constraint('statuses_history_issue_id_fkey', 'statuses_history', type_='foreignkey')
    op.create_foreign_key(None, 'statuses_history', 'issues', ['issue_id'], ['external_id'])
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'statuses_history', type_='foreignkey')
    op.create_foreign_key('statuses_history_issue_id_fkey', 'statuses_history', 'issues', ['issue_id'], ['id'])
    op.alter_column('issues', 'finished_at',
               existing_type=sa.DateTime(timezone=True),
               type_=postgresql.TIMESTAMP(),
               existing_nullable=True)
    op.alter_column('issues', 'dead_line',
               existing_type=sa.DateTime(timezone=True),
               type_=postgresql.TIMESTAMP(),
               existing_nullable=False)
    op.alter_column('issues', 'finish_date_plane',
               existing_type=sa.DateTime(timezone=True),
               type_=postgresql.TIMESTAMP(),
               existing_nullable=False)
    # ### end Alembic commands ###
